//JSON -> Parse -> object -> Stringify-> JSON

//Questions
//Hashing devices
//Hashing time, 1110 = 12-6:30, 1080 = 12-6
//Where is sequence parallel/serial stored in piston?
//What is a Location Action? (in the rules API, is it just changing location mode?)
//What is a sleep action

//pre-parsed piston
let piston01 = {
  "active": true,
  "author": "Kaylen Rivers",
  "bin": "7ruef",
  "build": 3,
  "cache": {
    "2:1:0": {
      "d": 0,
      "s": 1624021077169,
      "t": "string",
      "v": "closed",
      "vt": "enum"
    },
    ":3c6d0e1c436d29c07dbac5a3d5a0ee19::switch": {
      "a": "switch",
      "d": ":3c6d0e1c436d29c07dbac5a3d5a0ee19:",
      "i": null,
      "p": "a",
      "s": 1624021083792,
      "t": "enum",
      "v": "off",
      "vt": "lifxSelector",
      "x": false
    },
    ":477447a9e40157486eb79c6612a2d0a9::contact": {
      "a": "contact",
      "d": ":477447a9e40157486eb79c6612a2d0a9:",
      "i": null,
      "s": 1624288821267,
      "t": "enum",
      "v": "closed",
      "vt": "string",
      "x": false
    },
    "c:1": true,
    "c:2": true
  },
  "created": 1624020635793,
  "debugLevel": 0,
  "hash": {
    "0073aaaf-6d45-4c70-ba5b-9af6a17976e1": ":88c999cadf8e7baf6267fdffa64e9e4d:",
    "255d3ca3-a312-4b70-a72d-5a44b158beaf": ":d14431c4044d687da4c62bed8372e329:"
  },
  "initialVersion": "v0.3.113.20210203",
  "lastEvent": {
    "date": 1624376208177,
    "delay": 0,
    "device": ":88c999cadf8e7baf6267fdffa64e9e4d:",
    "index": 0,
    "name": "time",
    "physical": false,
    "unit": null,
    "value": 1624376208177
  },
  "lastExecuted": 1624288821224,
  "logging": 0,
  "logs": [],
  "modified": 1624376207755,
  "modifiedVersion": "v0.3.113.20210203",
  "nextSchedule": 0,
  "piston": {
    "o": {
      "ced": 0,
      "cto": 0
    },
    "r": [],
    "rn": false,
    "rop": "and",
    "s": [
      {
        "$": 1,
        "a": "0",
        "c": [
          {
            "$": 2,
            "co": "is",
            "ct": "c",
            "fs": [],
            "lo": {
              "a": "contact",
              "d": [
                ":477447a9e40157486eb79c6612a2d0a9:"
              ],
              "f": "l",
              "g": "any",
              "t": "p",
              "vt": "string"
            },
            "ro": {
              "c": "closed",
              "d": [],
              "exp": {
                "i": [
                  {
                    "l": "0:5",
                    "ok": true,
                    "t": "string",
                    "v": "closed"
                  }
                ],
                "ok": true,
                "str": "closed",
                "t": "expression"
              },
              "f": "l",
              "g": "any",
              "t": "c",
              "vt": "enum"
            },
            "ro2": {
              "d": [],
              "g": "any",
              "t": "c"
            },
            "s": true,
            "sm": "auto",
            "t": "condition",
            "to": {
              "d": [],
              "g": "any",
              "t": "c"
            },
            "to2": {
              "d": [],
              "g": "any",
              "t": "c"
            },
            "ts": []
          }
        ],
        "e": [],
        "ei": [],
        "o": "and",
        "r": [],
        "rop": "and",
        "s": [
          {
            "$": 5,
            "a": "0",
            "d": [
              ":89ae225bd3cd389fd827ac4be68547e5:"
            ],
            "k": [
              {
                "$": 8,
                "c": "on",
                "p": []
              }
            ],
            "r": [],
            "rop": "and",
            "t": "action",
            "tcp": "c"
          }
        ],
        "t": "if",
        "tcp": "c"
      }
    ],
    "v": [],
    "z": ""
  },
  "schedules": [],
  "state": {
    "autoNew": "true",
    "new": "true",
    "old": "true"
  },
  "stats": {
    "timing": [
      {
        "d": 2,
        "e": 115,
        "l": 45,
        "t": 1624021083642,
        "u": 46
      },
      {
        "d": 3,
        "e": 49,
        "l": 52,
        "t": 1624022022692,
        "u": 1
      },
      {
        "d": 1,
        "e": 38,
        "l": 45,
        "t": 1624022301971,
        "u": 1
      },
      {
        "d": 64,
        "e": 21,
        "l": 35,
        "t": 1624022373965,
        "u": 0
      },
      {
        "d": 56,
        "e": 26,
        "l": 35,
        "t": 1624022409586,
        "u": 1
      },
      {
        "d": 49,
        "e": 18,
        "l": 25,
        "t": 1624022725318,
        "u": 1
      },
      {
        "d": 48,
        "e": 20,
        "l": 24,
        "t": 1624022734295,
        "u": 1
      },
      {
        "d": 56,
        "e": 18,
        "l": 24,
        "t": 1624022738479,
        "u": 0
      },
      {
        "d": 57,
        "e": 25,
        "l": 33,
        "t": 1624022739488,
        "u": 0
      },
      {
        "d": 63,
        "e": 20,
        "l": 42,
        "t": 1624022741984,
        "u": 0
      },
      {
        "d": 49,
        "e": 23,
        "l": 26,
        "t": 1624022743270,
        "u": 0
      },
      {
        "d": 63,
        "e": 18,
        "l": 31,
        "t": 1624022767746,
        "u": 0
      },
      {
        "d": 70,
        "e": 30,
        "l": 40,
        "t": 1624022768624,
        "u": 1
      },
      {
        "d": 56,
        "e": 19,
        "l": 34,
        "t": 1624022771984,
        "u": 0
      },
      {
        "d": 148,
        "e": 29,
        "l": 38,
        "t": 1624022773817,
        "u": 0
      },
      {
        "d": 67,
        "e": 18,
        "l": 49,
        "t": 1624022777867,
        "u": 0
      },
      {
        "d": 62,
        "e": 25,
        "l": 32,
        "t": 1624022785102,
        "u": 0
      },
      {
        "d": 68,
        "e": 18,
        "l": 35,
        "t": 1624022798282,
        "u": 1
      },
      {
        "d": 56,
        "e": 24,
        "l": 31,
        "t": 1624022805116,
        "u": 1
      },
      {
        "d": 67,
        "e": 19,
        "l": 39,
        "t": 1624022820600,
        "u": 0
      },
      {
        "d": 61,
        "e": 29,
        "l": 149,
        "t": 1624022837052,
        "u": 0
      },
      {
        "d": 64,
        "e": 20,
        "l": 40,
        "t": 1624022979466,
        "u": 0
      },
      {
        "d": 50,
        "e": 21,
        "l": 27,
        "t": 1624022980920,
        "u": 0
      },
      {
        "d": 70,
        "e": 19,
        "l": 37,
        "t": 1624022983840,
        "u": 1
      },
      {
        "d": 66,
        "e": 29,
        "l": 39,
        "t": 1624022985355,
        "u": 0
      },
      {
        "d": 58,
        "e": 20,
        "l": 36,
        "t": 1624022986959,
        "u": 0
      },
      {
        "d": 62,
        "e": 27,
        "l": 37,
        "t": 1624022995067,
        "u": 0
      },
      {
        "d": 89,
        "e": 18,
        "l": 37,
        "t": 1624022998135,
        "u": 0
      },
      {
        "d": 52,
        "e": 21,
        "l": 30,
        "t": 1624023000160,
        "u": 1
      },
      {
        "d": 51,
        "e": 18,
        "l": 25,
        "t": 1624024275512,
        "u": 0
      },
      {
        "d": 64,
        "e": 26,
        "l": 37,
        "t": 1624024276805,
        "u": 1
      },
      {
        "d": 49,
        "e": 19,
        "l": 35,
        "t": 1624036494590,
        "u": 0
      },
      {
        "d": 52,
        "e": 18,
        "l": 26,
        "t": 1624282643793,
        "u": 0
      },
      {
        "d": 69,
        "e": 26,
        "l": 39,
        "t": 1624282646074,
        "u": 0
      },
      {
        "d": 158,
        "e": 21,
        "l": 37,
        "t": 1624282665574,
        "u": 0
      },
      {
        "d": 59,
        "e": 28,
        "l": 37,
        "t": 1624282667721,
        "u": 0
      },
      {
        "d": 52,
        "e": 20,
        "l": 30,
        "t": 1624282680536,
        "u": 0
      },
      {
        "d": 89,
        "e": 30,
        "l": 38,
        "t": 1624282688637,
        "u": 0
      },
      {
        "d": 51,
        "e": 16,
        "l": 26,
        "t": 1624282717966,
        "u": 1
      },
      {
        "d": 51,
        "e": 24,
        "l": 33,
        "t": 1624282719421,
        "u": 1
      },
      {
        "d": 61,
        "e": 19,
        "l": 37,
        "t": 1624288405689,
        "u": 1
      },
      {
        "d": 77,
        "e": 26,
        "l": 36,
        "t": 1624288405868,
        "u": 1
      },
      {
        "d": 64,
        "e": 21,
        "l": 40,
        "t": 1624288437561,
        "u": 1
      },
      {
        "d": 72,
        "e": 28,
        "l": 42,
        "t": 1624288438156,
        "u": 0
      },
      {
        "d": 70,
        "e": 20,
        "l": 38,
        "t": 1624288548903,
        "u": 0
      },
      {
        "d": 48,
        "e": 20,
        "l": 27,
        "t": 1624288549279,
        "u": 1
      },
      {
        "d": 50,
        "e": 20,
        "l": 30,
        "t": 1624288550012,
        "u": 0
      },
      {
        "d": 50,
        "e": 20,
        "l": 33,
        "t": 1624288550835,
        "u": 0
      },
      {
        "d": 65,
        "e": 19,
        "l": 29,
        "t": 1624288551528,
        "u": 1
      },
      {
        "d": 81,
        "e": 32,
        "l": 41,
        "t": 1624288551873,
        "u": 0
      },
      {
        "d": 65,
        "e": 20,
        "l": 36,
        "t": 1624288554809,
        "u": 0
      },
      {
        "d": 69,
        "e": 41,
        "l": 41,
        "t": 1624288555120,
        "u": 1
      },
      {
        "d": 56,
        "e": 19,
        "l": 37,
        "t": 1624288555500,
        "u": 1
      },
      {
        "d": 66,
        "e": 27,
        "l": 40,
        "t": 1624288555920,
        "u": 1
      },
      {
        "d": 60,
        "e": 21,
        "l": 36,
        "t": 1624288557695,
        "u": 0
      },
      {
        "d": 59,
        "e": 122,
        "l": 35,
        "t": 1624288558217,
        "u": 1
      },
      {
        "d": 47,
        "e": 18,
        "l": 31,
        "t": 1624288559052,
        "u": 0
      },
      {
        "d": 57,
        "e": 20,
        "l": 29,
        "t": 1624288559426,
        "u": 0
      },
      {
        "d": 55,
        "e": 20,
        "l": 37,
        "t": 1624288820992,
        "u": 0
      },
      {
        "d": 53,
        "e": 23,
        "l": 34,
        "t": 1624288821224,
        "u": 0
      }
    ]
  },
  "store": {},
  "subscriptions": {
    "controls": 1,
    "devices": 2,
    "events": 1
  },
  "temp": {
    "randoms": {
      "$random": 0.6919160108931887,
      "$randomColor": "#F08080",
      "$randomColorName": "Pink",
      "$randomHue": 213,
      "$randomLevel": 41,
      "$randomSaturation": 80
    }
  },
  "trace": {},
  "vars": {}
};
let piston02 = {
    "active": true,
    "author": "Kaylen Rivers",
    "bin": "bnugd",
    "build": 2,
    "cache": {
        "2:1:0": {
            "d": 0,
            "s": 1624022718983,
            "t": "string",
            "v": "on",
            "vt": "enum"
        },
        "3:1:0": {
            "d": 0,
            "s": 1624554158010,
            "t": "integer",
            "v": 80,
            "vt": "decimal"
        },
        ":477447a9e40157486eb79c6612a2d0a9::contact": {
            "a": "contact",
            "d": ":477447a9e40157486eb79c6612a2d0a9:",
            "i": null,
            "s": 1624023000220,
            "t": "enum",
            "v": "closed",
            "vt": "string",
            "x": false
        },
        ":477447a9e40157486eb79c6612a2d0a9::temperature": {
            "a": "temperature",
            "d": ":477447a9e40157486eb79c6612a2d0a9:",
            "i": null,
            "s": 1624554158010,
            "t": "decimal",
            "v": 83.4,
            "vt": "string",
            "x": false
        },
        ":a738ac23abe62bd9df94dba9db5aee0e::switch": {
            "a": "switch",
            "d": ":a738ac23abe62bd9df94dba9db5aee0e:",
            "i": null,
            "p": "a",
            "s": 1624023009553,
            "t": "enum",
            "v": "off",
            "vt": "string",
            "x": false
        },
        "c:1": false,
        "c:2": false,
        "c:3": false
    },
    "created": 1624022459722,
    "hash": {
        "0073aaaf-6d45-4c70-ba5b-9af6a17976e1": ":88c999cadf8e7baf6267fdffa64e9e4d:",
        "d238cb9f-98db-44f8-8048-5c73b37a5421": ":45a1ab9d34ecc74e10f224ad212460a5:"
    },
    "initialVersion": "v0.3.113.20210203",
    "lastEvent": {
        "date": 1624554157972,
        "delay": 0,
        "device": ":88c999cadf8e7baf6267fdffa64e9e4d:",
        "index": 0,
        "name": "time",
        "physical": false,
        "unit": null,
        "value": 1624554157972
    },
    "lastExecuted": 1624470046485,
    "logging": 0,
    "logs": [],
    "modified": 1624554157616,
    "modifiedVersion": "v0.3.113.20210203",
    "nextSchedule": 0,
    "piston": {
        "o": {
            "ced": 0,
            "cto": 0
        },
        "r": [],
        "rn": false,
        "rop": "and",
        "s": [
            {
                "$": 1,
                "a": "0",
                "c": [
                    {
                        "$": 2,
                        "co": "is",
                        "ct": "c",
                        "fs": [],
                        "lo": {
                            "a": "switch",
                            "d": [
                                ":a738ac23abe62bd9df94dba9db5aee0e:"
                            ],
                            "f": "l",
                            "g": "any",
                            "p": "a",
                            "t": "p",
                            "vt": "string"
                        },
                        "ro": {
                            "c": "on",
                            "d": [],
                            "exp": {
                                "i": [
                                    {
                                        "l": "0:1",
                                        "ok": true,
                                        "t": "string",
                                        "v": "on"
                                    }
                                ],
                                "ok": true,
                                "str": "on",
                                "t": "expression"
                            },
                            "f": "l",
                            "g": "any",
                            "t": "c",
                            "vt": "enum"
                        },
                        "ro2": {
                            "d": [],
                            "g": "any",
                            "t": "c"
                        },
                        "s": true,
                        "sm": "auto",
                        "t": "condition",
                        "to": {
                            "d": [],
                            "g": "any",
                            "t": "c"
                        },
                        "to2": {
                            "d": [],
                            "g": "any",
                            "t": "c"
                        },
                        "ts": []
                    },
                    {
                        "$": 3,
                        "co": "is_equal_to",
                        "ct": "c",
                        "fs": [],
                        "lo": {
                            "a": "temperature",
                            "d": [
                                ":477447a9e40157486eb79c6612a2d0a9:"
                            ],
                            "f": "l",
                            "g": "any",
                            "t": "p",
                            "vt": "string"
                        },
                        "ro": {
                            "c": 80,
                            "d": [],
                            "exp": {
                                "i": [
                                    {
                                        "l": "0:1",
                                        "ok": true,
                                        "t": "integer",
                                        "v": 80
                                    }
                                ],
                                "ok": true,
                                "str": "80",
                                "t": "expression"
                            },
                            "f": "l",
                            "g": "any",
                            "t": "c",
                            "vt": "decimal"
                        },
                        "ro2": {
                            "d": [],
                            "g": "any",
                            "t": "c"
                        },
                        "s": true,
                        "sm": "auto",
                        "t": "condition",
                        "to": {
                            "d": [],
                            "g": "any",
                            "t": "c"
                        },
                        "to2": {
                            "d": [],
                            "g": "any",
                            "t": "c"
                        },
                        "ts": []
                    }
                ],
                "e": [],
                "ei": [],
                "o": "or",
                "r": [],
                "rop": "and",
                "s": [
                    {
                        "$": 6,
                        "a": "0",
                        "d": [
                            ":c7fca21c7e6085513b02af5e50713147:"
                        ],
                        "k": [
                            {
                                "$": 7,
                                "c": "off",
                                "p": []
                            }
                        ],
                        "r": [],
                        "rop": "and",
                        "t": "action",
                        "tcp": "c"
                    }
                ],
                "t": "if",
                "tcp": "c"
            }
        ],
        "v": [],
        "z": ""
    },
    "schedules": [],
    "state": {
        "autoNew": "false",
        "new": "false",
        "old": "false"
    },
    "stats": {
        "timing": [
            {
                "d": 52,
                "e": 20,
                "l": 34,
                "t": 1624022725321,
                "u": 1
            },
            {
                "d": 2,
                "e": 31,
                "l": 53,
                "t": 1624022732299,
                "u": 1
            },
            {
                "d": 62,
                "e": 28,
                "l": 42,
                "t": 1624022734309,
                "u": 0
            },
            {
                "d": 70,
                "e": 31,
                "l": 39,
                "t": 1624022738493,
                "u": 0
            },
            {
                "d": 44,
                "e": 20,
                "l": 25,
                "t": 1624022739475,
                "u": 1
            },
            {
                "d": 59,
                "e": 21,
                "l": 37,
                "t": 1624022741980,
                "u": 0
            },
            {
                "d": 46,
                "e": 20,
                "l": 26,
                "t": 1624022743267,
                "u": 0
            },
            {
                "d": 126,
                "e": 21,
                "l": 28,
                "t": 1624022767809,
                "u": 0
            },
            {
                "d": 71,
                "e": 22,
                "l": 39,
                "t": 1624022768625,
                "u": 0
            },
            {
                "d": 43,
                "e": 20,
                "l": 34,
                "t": 1624022771971,
                "u": 1
            },
            {
                "d": 48,
                "e": 20,
                "l": 24,
                "t": 1624022773717,
                "u": 0
            },
            {
                "d": 66,
                "e": 22,
                "l": 34,
                "t": 1624022777866,
                "u": 0
            },
            {
                "d": 71,
                "e": 19,
                "l": 27,
                "t": 1624022785111,
                "u": 1
            },
            {
                "d": 3,
                "e": 74,
                "l": 40,
                "t": 1624022790032,
                "u": 0
            },
            {
                "d": 65,
                "e": 26,
                "l": 39,
                "t": 1624022798279,
                "u": 1
            },
            {
                "d": 66,
                "e": 21,
                "l": 35,
                "t": 1624022805126,
                "u": 0
            },
            {
                "d": 49,
                "e": 20,
                "l": 27,
                "t": 1624022820582,
                "u": 0
            },
            {
                "d": 76,
                "e": 22,
                "l": 38,
                "t": 1624022837067,
                "u": 1
            },
            {
                "d": 32,
                "e": 87,
                "l": 26,
                "t": 1624022974795,
                "u": 1
            },
            {
                "d": 57,
                "e": 58,
                "l": 33,
                "t": 1624022979459,
                "u": 0
            },
            {
                "d": 58,
                "e": 62,
                "l": 37,
                "t": 1624022980928,
                "u": 0
            },
            {
                "d": 60,
                "e": 49,
                "l": 34,
                "t": 1624022983830,
                "u": 1
            },
            {
                "d": 57,
                "e": 50,
                "l": 37,
                "t": 1624022985346,
                "u": 1
            },
            {
                "d": 48,
                "e": 39,
                "l": 27,
                "t": 1624022986949,
                "u": 0
            },
            {
                "d": 46,
                "e": 39,
                "l": 27,
                "t": 1624022995051,
                "u": 0
            },
            {
                "d": 73,
                "e": 48,
                "l": 30,
                "t": 1624022998119,
                "u": 0
            },
            {
                "d": 62,
                "e": 52,
                "l": 34,
                "t": 1624023000170,
                "u": 0
            },
            {
                "d": 28,
                "e": 32,
                "l": 26,
                "t": 1624023009520,
                "u": 0
            },
            {
                "d": 49,
                "e": 24,
                "l": 30,
                "t": 1624024275510,
                "u": 0
            },
            {
                "d": 70,
                "e": 21,
                "l": 43,
                "t": 1624024276811,
                "u": 0
            },
            {
                "d": 57,
                "e": 22,
                "l": 33,
                "t": 1624036494598,
                "u": 1
            },
            {
                "d": 74,
                "e": 24,
                "l": 44,
                "t": 1624282643815,
                "u": 1
            },
            {
                "d": 61,
                "e": 21,
                "l": 37,
                "t": 1624282646066,
                "u": 1
            },
            {
                "d": 146,
                "e": 19,
                "l": 30,
                "t": 1624282665562,
                "u": 1
            },
            {
                "d": 55,
                "e": 25,
                "l": 37,
                "t": 1624282667717,
                "u": 0
            },
            {
                "d": 69,
                "e": 24,
                "l": 46,
                "t": 1624282680553,
                "u": 1
            },
            {
                "d": 72,
                "e": 19,
                "l": 27,
                "t": 1624282688620,
                "u": 0
            },
            {
                "d": 60,
                "e": 22,
                "l": 35,
                "t": 1624282717975,
                "u": 1
            },
            {
                "d": 50,
                "e": 22,
                "l": 28,
                "t": 1624282719420,
                "u": 0
            },
            {
                "d": 61,
                "e": 49,
                "l": 41,
                "t": 1624288405689,
                "u": 0
            },
            {
                "d": 80,
                "e": 38,
                "l": 34,
                "t": 1624288405871,
                "u": 0
            },
            {
                "d": 61,
                "e": 21,
                "l": 36,
                "t": 1624288437558,
                "u": 0
            },
            {
                "d": 72,
                "e": 22,
                "l": 44,
                "t": 1624288438156,
                "u": 1
            },
            {
                "d": 68,
                "e": 21,
                "l": 36,
                "t": 1624288548901,
                "u": 0
            },
            {
                "d": 66,
                "e": 24,
                "l": 43,
                "t": 1624288549297,
                "u": 0
            },
            {
                "d": 46,
                "e": 21,
                "l": 30,
                "t": 1624288550008,
                "u": 1
            },
            {
                "d": 50,
                "e": 20,
                "l": 29,
                "t": 1624288550835,
                "u": 1
            },
            {
                "d": 62,
                "e": 21,
                "l": 33,
                "t": 1624288551525,
                "u": 1
            },
            {
                "d": 73,
                "e": 23,
                "l": 36,
                "t": 1624288551865,
                "u": 1
            },
            {
                "d": 53,
                "e": 20,
                "l": 29,
                "t": 1624288554797,
                "u": 0
            },
            {
                "d": 59,
                "e": 28,
                "l": 38,
                "t": 1624288555110,
                "u": 0
            },
            {
                "d": 60,
                "e": 24,
                "l": 42,
                "t": 1624288555504,
                "u": 1
            },
            {
                "d": 50,
                "e": 24,
                "l": 35,
                "t": 1624288555904,
                "u": 1
            },
            {
                "d": 68,
                "e": 23,
                "l": 39,
                "t": 1624288557703,
                "u": 1
            },
            {
                "d": 51,
                "e": 22,
                "l": 31,
                "t": 1624288558209,
                "u": 1
            },
            {
                "d": 47,
                "e": 20,
                "l": 31,
                "t": 1624288559052,
                "u": 1
            },
            {
                "d": 56,
                "e": 21,
                "l": 33,
                "t": 1624288559425,
                "u": 0
            },
            {
                "d": 46,
                "e": 21,
                "l": 38,
                "t": 1624288820983,
                "u": 1
            },
            {
                "d": 49,
                "e": 21,
                "l": 29,
                "t": 1624288821220,
                "u": 0
            },
            {
                "d": 48,
                "e": 22,
                "l": 36,
                "t": 1624384448977,
                "u": 0
            },
            {
                "d": 64,
                "e": 62,
                "l": 41,
                "t": 1624384459492,
                "u": 0
            },
            {
                "d": 60,
                "e": 23,
                "l": 35,
                "t": 1624384505374,
                "u": 0
            },
            {
                "d": 60,
                "e": 24,
                "l": 39,
                "t": 1624384505801,
                "u": 0
            },
            {
                "d": 60,
                "e": 26,
                "l": 45,
                "t": 1624384512959,
                "u": 0
            },
            {
                "d": 52,
                "e": 22,
                "l": 32,
                "t": 1624384515085,
                "u": 0
            },
            {
                "d": 69,
                "e": 28,
                "l": 56,
                "t": 1624385621739,
                "u": 0
            },
            {
                "d": 77,
                "e": 25,
                "l": 41,
                "t": 1624385624290,
                "u": 1
            },
            {
                "d": 69,
                "e": 45,
                "l": 42,
                "t": 1624385665125,
                "u": 0
            },
            {
                "d": 46,
                "e": 22,
                "l": 32,
                "t": 1624385666749,
                "u": 1
            },
            {
                "d": 48,
                "e": 19,
                "l": 29,
                "t": 1624385712609,
                "u": 1
            },
            {
                "d": 58,
                "e": 24,
                "l": 40,
                "t": 1624385713326,
                "u": 1
            },
            {
                "d": 56,
                "e": 25,
                "l": 35,
                "t": 1624385716845,
                "u": 0
            },
            {
                "d": 63,
                "e": 24,
                "l": 37,
                "t": 1624385717512,
                "u": 1
            },
            {
                "d": 62,
                "e": 22,
                "l": 41,
                "t": 1624385744963,
                "u": 0
            },
            {
                "d": 67,
                "e": 23,
                "l": 40,
                "t": 1624385753831,
                "u": 0
            },
            {
                "d": 59,
                "e": 24,
                "l": 110,
                "t": 1624385754057,
                "u": 0
            },
            {
                "d": 52,
                "e": 23,
                "l": 33,
                "t": 1624385754324,
                "u": 0
            },
            {
                "d": 49,
                "e": 23,
                "l": 39,
                "t": 1624403778917,
                "u": 1
            },
            {
                "d": 53,
                "e": 43,
                "l": 36,
                "t": 1624403780069,
                "u": 1
            },
            {
                "d": 69,
                "e": 23,
                "l": 36,
                "t": 1624405775499,
                "u": 1
            },
            {
                "d": 86,
                "e": 24,
                "l": 33,
                "t": 1624465371519,
                "u": 0
            },
            {
                "d": 60,
                "e": 23,
                "l": 39,
                "t": 1624466168796,
                "u": 0
            },
            {
                "d": 66,
                "e": 43,
                "l": 47,
                "t": 1624466170679,
                "u": 0
            },
            {
                "d": 58,
                "e": 42,
                "l": 36,
                "t": 1624466174603,
                "u": 0
            },
            {
                "d": 63,
                "e": 30,
                "l": 40,
                "t": 1624466175832,
                "u": 1
            },
            {
                "d": 50,
                "e": 19,
                "l": 30,
                "t": 1624466180465,
                "u": 1
            },
            {
                "d": 51,
                "e": 21,
                "l": 34,
                "t": 1624466204595,
                "u": 1
            },
            {
                "d": 59,
                "e": 29,
                "l": 37,
                "t": 1624466233791,
                "u": 0
            },
            {
                "d": 46,
                "e": 18,
                "l": 29,
                "t": 1624466235948,
                "u": 1
            },
            {
                "d": 73,
                "e": 23,
                "l": 38,
                "t": 1624466294293,
                "u": 1
            },
            {
                "d": 62,
                "e": 25,
                "l": 39,
                "t": 1624466296372,
                "u": 0
            },
            {
                "d": 54,
                "e": 22,
                "l": 35,
                "t": 1624466296910,
                "u": 0
            },
            {
                "d": 47,
                "e": 18,
                "l": 31,
                "t": 1624466297828,
                "u": 1
            },
            {
                "d": 66,
                "e": 28,
                "l": 51,
                "t": 1624470020855,
                "u": 0
            },
            {
                "d": 63,
                "e": 22,
                "l": 40,
                "t": 1624470046246,
                "u": 0
            },
            {
                "d": 67,
                "e": 22,
                "l": 37,
                "t": 1624470046485,
                "u": 1
            }
        ]
    },
    "store": {},
    "subscriptions": {
        "controls": 1,
        "devices": 3,
        "events": 2
    },
    "temp": {
        "randoms": {
            "$random": 0.5053974448744792,
            "$randomColor": "#7FFFD4",
            "$randomColorName": "Red",
            "$randomHue": 183,
            "$randomLevel": 95,
            "$randomSaturation": 99
        }
    },
    "trace": {},
    "vars": {}
}
let piston03 = {
    "active": true,
    "author": "Kaylen Rivers",
    "bin": "zmip",
    "build": 2,
    "cache": {
        "2:1:0": {
            "s": 1624905872222,
            "t": "time",
            "v": 0
        },
        "2:2:0": {
            "s": 1624905872222,
            "t": "time",
            "v": 66600000
        },
        "2:v": {
            "s": 1624939199226,
            "t": "time",
            "v": 86399213
        },
        "3:1:0": {
            "d": 0,
            "s": 1624905872252,
            "t": "string",
            "v": "active",
            "vt": "enum"
        },
        ":c3f9f5f82518cb646a5f9e4eb1eb1283::motion": {
            "a": "motion",
            "d": ":c3f9f5f82518cb646a5f9e4eb1eb1283:",
            "i": null,
            "s": 1624905872252,
            "t": "enum",
            "v": "inactive",
            "vt": "string",
            "x": false
        },
        "c:1": false,
        "c:2": true,
        "c:3": false
    },
    "created": 1624024263826,
    "hash": {
        "0073aaaf-6d45-4c70-ba5b-9af6a17976e1": ":88c999cadf8e7baf6267fdffa64e9e4d:",
        "1b0abe1b-89a2-43a5-a66d-c17e9b186400": ":e2e5387a1b6cf743fc86ada0a9601b7f:",
        "6361507c-5330-4c5e-a9f4-ef4732499d92": ":49ce42ab9a06016af5e5b7a56d9e3559:",
        "fba0a0f5-efe7-4b93-b3d4-5a722064c7e4": ":c3f9f5f82518cb646a5f9e4eb1eb1283:"
    },
    "initialVersion": "v0.3.113.20210203",
    "lastEvent": {
        "date": 1624939200000,
        "delay": 0,
        "device": ":88c999cadf8e7baf6267fdffa64e9e4d:",
        "index": 0,
        "name": "time",
        "physical": false,
        "unit": null,
        "value": 1624905872188
    },
    "lastExecuted": 1624939199114,
    "logging": 0,
    "logs": [],
    "modified": 1624905871786,
    "modifiedVersion": "v0.3.113.20210203",
    "nextSchedule": 1625005800000,
    "piston": {
        "o": {
            "ced": 0,
            "cto": 0
        },
        "r": [],
        "rn": false,
        "rop": "and",
        "s": [
            {
                "$": 1,
                "a": "0",
                "c": [
                    {
                        "$": 2,
                        "co": "is_between",
                        "ct": "c",
                        "fs": [],
                        "lo": {
                            "d": [],
                            "f": "l",
                            "g": "any",
                            "odw": [
                                1,
                                2,
                                3,
                                4,
                                5
                            ],
                            "t": "v",
                            "v": "time",
                            "vt": "string"
                        },
                        "ro": {
                            "d": [],
                            "exp": {
                                "i": [],
                                "ok": true,
                                "str": "",
                                "t": "expression"
                            },
                            "f": "l",
                            "g": "any",
                            "t": "c",
                            "vt": "time"
                        },
                        "ro2": {
                            "c": 1110,
                            "d": [],
                            "exp": {
                                "i": [
                                    {
                                        "l": "0:3",
                                        "ok": true,
                                        "t": "integer",
                                        "v": 1110
                                    }
                                ],
                                "ok": true,
                                "str": "1110",
                                "t": "expression"
                            },
                            "f": "l",
                            "g": "any",
                            "t": "c",
                            "vt": "time"
                        },
                        "s": true,
                        "sm": "auto",
                        "t": "condition",
                        "to": {
                            "d": [],
                            "g": "any",
                            "t": "c"
                        },
                        "to2": {
                            "d": [],
                            "g": "any",
                            "t": "c"
                        },
                        "ts": []
                    },
                    {
                        "$": 3,
                        "co": "is",
                        "ct": "c",
                        "fs": [],
                        "lo": {
                            "a": "motion",
                            "d": [
                                ":c3f9f5f82518cb646a5f9e4eb1eb1283:"
                            ],
                            "f": "l",
                            "g": "any",
                            "t": "p",
                            "vt": "string"
                        },
                        "ro": {
                            "c": "active",
                            "d": [],
                            "exp": {
                                "i": [
                                    {
                                        "l": "0:5",
                                        "ok": true,
                                        "t": "string",
                                        "v": "active"
                                    }
                                ],
                                "ok": true,
                                "str": "active",
                                "t": "expression"
                            },
                            "f": "l",
                            "g": "any",
                            "t": "c",
                            "vt": "enum"
                        },
                        "ro2": {
                            "d": [],
                            "g": "any",
                            "t": "c"
                        },
                        "s": true,
                        "sm": "auto",
                        "t": "condition",
                        "to": {
                            "d": [],
                            "g": "any",
                            "t": "c"
                        },
                        "to2": {
                            "d": [],
                            "g": "any",
                            "t": "c"
                        },
                        "ts": []
                    }
                ],
                "e": [],
                "ei": [],
                "o": "and",
                "r": [],
                "rop": "and",
                "s": [
                    {
                        "$": 4,
                        "a": "0",
                        "d": [],
                        "k": [
                            {
                                "$": 5,
                                "c": "setLocationMode",
                                "p": [
                                    {
                                        "c": ":e2e5387a1b6cf743fc86ada0a9601b7f:",
                                        "d": [],
                                        "exp": {
                                            "i": [
                                                {
                                                    "l": "0:33",
                                                    "ok": true,
                                                    "t": "string",
                                                    "v": ":e2e5387a1b6cf743fc86ada0a9601b7f:"
                                                }
                                            ],
                                            "ok": true,
                                            "str": ":e2e5387a1b6cf743fc86ada0a9601b7f:",
                                            "t": "expression"
                                        },
                                        "f": "l",
                                        "g": "avg",
                                        "t": "c",
                                        "vt": "mode"
                                    }
                                ]
                            }
                        ],
                        "r": [],
                        "rop": "and",
                        "t": "action",
                        "tcp": "c"
                    },
                    {
                        "$": 6,
                        "a": "0",
                        "d": [],
                        "k": [
                            {
                                "$": 7,
                                "c": "sendSMSNotification",
                                "p": [
                                    {
                                        "c": "Hello World",
                                        "d": [],
                                        "exp": {
                                            "i": [
                                                {
                                                    "l": "0:10",
                                                    "ok": true,
                                                    "t": "string",
                                                    "v": "Hello World"
                                                }
                                            ],
                                            "ok": true,
                                            "str": "Hello World",
                                            "t": "expression"
                                        },
                                        "f": "l",
                                        "g": "avg",
                                        "t": "c",
                                        "vt": "string"
                                    },
                                    {
                                        "c": "9789999999",
                                        "d": [],
                                        "exp": {
                                            "i": [
                                                {
                                                    "l": "0:9",
                                                    "ok": true,
                                                    "t": "string",
                                                    "v": "9789999999"
                                                }
                                            ],
                                            "ok": true,
                                            "str": "9789999999",
                                            "t": "expression"
                                        },
                                        "f": "l",
                                        "g": "avg",
                                        "t": "c",
                                        "vt": "phone"
                                    },
                                    {
                                        "c": "false",
                                        "d": [],
                                        "exp": {
                                            "i": [
                                                {
                                                    "l": "0:4",
                                                    "ok": true,
                                                    "t": "boolean",
                                                    "v": "false"
                                                }
                                            ],
                                            "ok": true,
                                            "str": "false",
                                            "t": "expression"
                                        },
                                        "f": "l",
                                        "g": "avg",
                                        "t": "c",
                                        "vt": "boolean"
                                    }
                                ]
                            }
                        ],
                        "r": [],
                        "rop": "and",
                        "t": "action",
                        "tcp": "c"
                    }
                ],
                "t": "if",
                "tcp": "c"
            }
        ],
        "v": [],
        "z": ""
    },
    "schedules": [
        {
            "args": {},
            "cs": [],
            "d": null,
            "evt": {
                "date": 1624939200000,
                "delay": 0,
                "device": ":88c999cadf8e7baf6267fdffa64e9e4d:",
                "index": 0,
                "name": "time",
                "physical": false,
                "unit": null,
                "value": 1624905872188
            },
            "i": 0,
            "ps": 0,
            "s": 2,
            "stack": {
                "device": null,
                "devices": null,
                "index": null,
                "json": {},
                "response": {}
            },
            "t": 1625005800000
        }
    ],
    "state": {
        "autoNew": "false",
        "new": "false",
        "old": "false"
    },
    "stats": {
        "timing": [
            {
                "d": 0,
                "e": 20,
                "l": 53,
                "t": 1624919399053,
                "u": 7
            },
            {
                "d": 0,
                "e": 94,
                "l": 89,
                "t": 1624939199114,
                "u": 18
            }
        ]
    },
    "store": {},
    "subscriptions": {
        "controls": 0,
        "devices": 1,
        "events": 1
    },
    "temp": {},
    "trace": {
        "d": 203,
        "points": {
            "c:1": {
                "d": 84,
                "o": 97,
                "v": false
            },
            "end": {
                "d": 0,
                "o": 182,
                "v": 0
            },
            "s:1": {
                "d": 87,
                "o": 95,
                "v": true
            }
        },
        "t": 1624939199115
    },
    "vars": {}
};
let oldRule01 = {
  "items": [
    {
      "name": "Rule 01",
      "actions": [
        {
          "if": {
            "equals": {
              "left": {
                "device": {
                  "devices": [
                    "f522cb3f-e131-401d-a391-7cf32638ef6e"
                  ],
                  "component": "main",
                  "capability": "contactSensor",
                  "attribute": "contact",
                  "trigger": "Always"
                },
                "type": "device"
              },
              "right": {
                "string": "closed",
                "type": "string"
              },
              "aggregation": "Any"
            },
            "type": "equals",
            "then": [
              {
                "command": {
                  "devices": [
                    "6caf1de7-9305-43b7-96f9-afefa6e702fc"
                  ],
                  "commands": [
                    {
                      "component": "main",
                      "capability": "switch",
                      "command": "on"
                    }
                  ],
                  "sequence": {
                    "commands": "Serial",
                    "devices": "Serial"
                  }
                },
                "type": "command"
              }
            ],
            "sequence": {
              "then": "Parallel",
              "else": "Serial"
            }
          },
          "type": "if"
        }
      ],
      "sequence": {
        "actions": "Serial"
      },
      "timeZoneId": "America/New_York",
      "meta": {
        "clientInfo": {
          "userOSType": "iOS",
          "userSTAppVersion": "1.6.67-520",
          "userCreationTime": 1624376436,
          "userDeviceId": "25EBCD10-E620-4F30-A035-E976011CFCB7",
          "userUpdateTime": 1624376436
        },
        "ruleVersion": "1.0",
        "baseLocationID": "0073aaaf-6d45-4c70-ba5b-9af6a17976e1",
        "automationNameUpdatedTime": 0,
        "hidden": false
      },
      "status": "Enabled",
      "id": "491829ad-f16a-4f8f-a085-ee5b12f4f5cd",
      "executionLocation": "Cloud",
      "ownerType": "Location",
      "ownerId": "0073aaaf-6d45-4c70-ba5b-9af6a17976e1",
      "dateCreated": "2021-06-22T15:40:37Z",
      "dateUpdated": "2021-06-22T15:40:37Z",
      "iconUrl": "https://client.smartthings.com/icons/scenes/morning"
    }
  ]
};
let oldRule02 = {
  "name": "Rule 02",
  "actions": [
      {
          "if": {
              "or": [
                  {
                      "equals": {
                          "left": {
                              "device": {
                                  "devices": [
                                      "5565fa99-7eec-4bed-b671-c8b5b2c110ca"
                                  ],
                                  "component": "main",
                                  "capability": "switch",
                                  "attribute": "switch",
                                  "trigger": "Always"
                              },
                              "type": "device"
                          },
                          "right": {
                              "string": "on",
                              "type": "string"
                          },
                          "aggregation": "Any"
                      },
                      "type": "equals"
                  },
                  {
                      "equals": {
                          "left": {
                              "device": {
                                  "devices": [
                                      "f522cb3f-e131-401d-a391-7cf32638ef6e"
                                  ],
                                  "component": "main",
                                  "capability": "temperatureMeasurement",
                                  "attribute": "temperature",
                                  "trigger": "Always"
                              },
                              "type": "device"
                          },
                          "right": {
                              "decimal": 80.0,
                              "type": "decimal"
                          },
                          "aggregation": "Any"
                      },
                      "type": "equals"
                  }
              ],
              "type": "or",
              "then": [
                  {
                      "command": {
                          "devices": [
                              "0b29d24b-3458-4a65-9afe-4fdd10135b41"
                          ],
                          "commands": [
                              {
                                  "component": "main",
                                  "capability": "switch",
                                  "command": "off"
                              }
                          ],
                          "sequence": {
                              "commands": "Serial",
                              "devices": "Serial"
                          }
                      },
                      "type": "command"
                  }
              ],
              "sequence": {
                  "then": "Parallel",
                  "else": "Serial"
              }
          },
          "type": "if"
      }
  ],
  "sequence": {
      "actions": "Serial"
  },
  "timeZoneId": "America/New_York",
  "meta": {
      "hidden": false,
      "automationNameUpdatedTime": 0,
      "baseLocationID": "0073aaaf-6d45-4c70-ba5b-9af6a17976e1",
      "ruleVersion": "1.0",
      "clientInfo": {
          "userOSType": "iOS",
          "userSTAppVersion": "1.6.67-520",
          "userCreationTime": 1624554149,
          "userDeviceId": "25EBCD10-E620-4F30-A035-E976011CFCB7",
          "userUpdateTime": 1624554149
      }
  },
  "status": "Enabled",
  "id": "e54c8e95-6882-4974-af46-d970dc3c86cb",
  "executionLocation": "Cloud",
  "ownerType": "Location",
  "ownerId": "0073aaaf-6d45-4c70-ba5b-9af6a17976e1",
  "dateCreated": "2021-06-24T17:02:30Z",
  "dateUpdated": "2021-06-24T17:02:30Z",
  "iconUrl": "https://client.smartthings.com/icons/scenes/morning"
  };
let oldRule03 = {
            "name": "Rule 03",
            "actions": [
                {
                    "if": {
                        "and": [
                            {
                                "equals": {
                                    "left": {
                                        "date": {
                                            "timeZoneId": "America/New_York",
                                            "daysOfWeek": [
                                                "Mon",
                                                "Tue",
                                                "Wed",
                                                "Thu",
                                                "Fri"
                                            ]
                                        },
                                        "type": "date"
                                    },
                                    "right": {
                                        "date": {
                                            "timeZoneId": "America/New_York"
                                        },
                                        "type": "date"
                                    },
                                    "aggregation": "Any"
                                },
                                "type": "equals"
                            },
                            {
                                "between": {
                                    "value": {
                                        "time": {
                                            "reference": "Now"
                                        },
                                        "type": "time"
                                    },
                                    "start": {
                                        "time": {
                                            "timeZoneId": "America/New_York",
                                            "reference": "Noon",
                                            "offset": {
                                                "value": {
                                                    "integer": 0,
                                                    "type": "integer"
                                                },
                                                "unit": "Minute"
                                            }
                                        },
                                        "type": "time"
                                    },
                                    "end": {
                                        "time": {
                                            "timeZoneId": "America/New_York",
                                            "reference": "Noon",
                                            "offset": {
                                                "value": {
                                                    "integer": 390,
                                                    "type": "integer"
                                                },
                                                "unit": "Minute"
                                            }
                                        },
                                        "type": "time"
                                    },
                                    "aggregation": "Any"
                                },
                                "type": "between"
                            },
                            {
                                "equals": {
                                    "left": {
                                        "device": {
                                            "devices": [
                                                "fba0a0f5-efe7-4b93-b3d4-5a722064c7e4"
                                            ],
                                            "component": "main",
                                            "capability": "motionSensor",
                                            "attribute": "motion",
                                            "trigger": "Always"
                                        },
                                        "type": "device"
                                    },
                                    "right": {
                                        "string": "active",
                                        "type": "string"
                                    },
                                    "aggregation": "Any"
                                },
                                "type": "equals"
                            }
                        ],
                        "type": "and",
                        "then": [
                            {
                                "location": {
                                    "locationId": "0073aaaf-6d45-4c70-ba5b-9af6a17976e1",
                                    "mode": "1b0abe1b-89a2-43a5-a66d-c17e9b186400"
                                },
                                "type": "location"
                            },
                            {
                                "notification": {
                                    "sms": {
                                        "message": "Hello World",
                                        "recipients": [
                                            "sms:+19789999999"
                                        ],
                                        "entityId": "24cacb59-a2c9-43dc-be56-8ccb7d11de94",
                                        "messageGroupSet": "39d19b36-7cfd-4840-a1b6-9592bdf78568",
                                        "messageGroupKey": "0f5a8020_7fb6_4209_81a3_c99fdcec2f6b"
                                    },
                                    "type": "sms"
                                },
                                "type": "notification"
                            }
                        ],
                        "sequence": {
                            "then": "Parallel",
                            "else": "Serial"
                        }
                    },
                    "type": "if"
                }
            ],
            "sequence": {
                "actions": "Serial"
            },
            "timeZoneId": "America/New_York",
            "meta": {
                "hidden": false,
                "automationNameUpdatedTime": 0,
                "baseLocationID": "0073aaaf-6d45-4c70-ba5b-9af6a17976e1",
                "ruleVersion": "1.0",
                "clientInfo": {
                    "userOSType": "iOS",
                    "userCreationTime": 1624905576,
                    "userUpdateTime": 1624974904,
                    "userDeviceId": "25EBCD10-E620-4F30-A035-E976011CFCB7",
                    "userSTAppVersion": "1.6.68-523"
                }
            },
            "status": "Enabled",
            "id": "99355eca-4e34-4fb7-907c-285973a9d93b",
            "executionLocation": "Cloud",
            "ownerType": "Location",
            "ownerId": "0073aaaf-6d45-4c70-ba5b-9af6a17976e1",
            "dateCreated": "2021-06-28T18:39:37Z",
            "dateUpdated": "2021-06-29T13:55:06Z",
            "iconUrl": "https://client.smartthings.com/icons/scenes/morning"
        };

function pistonSimplification(piston){
          let translationKey = {
            a:"attribute",
            c:"condition(s)",
            co:"comparator operand",
            d:"devices",
            e:"else",
            ei:"else if UNSUPPORTED",
            lo:"left operand",
            o:"operator",
            r:"restrictions",
            rn:"not",
            ro:"right operand",
            rop:"and/or",
            s:"statement(s)",
            sm:"subscription mode",
            t:"type",
            tcp:"task cancellation policy",
            vt:"verification type"
          };
          let newPiston = {};
          Object.keys(piston).forEach((key) => {
            const newKey = translationKey[key] || key;
            let oldValue = piston[key];
            if (oldValue.constructor == Object){
              oldValue = pistonSimplification(oldValue);
            }else if (Array.isArray(oldValue)){
              for (let i = 0;i < oldValue.length; i++){
                oldValue[i] = pistonSimplification(oldValue[i])
              }
            }
            newPiston[newKey] = oldValue;
          });
          return newPiston;
        };

class ActionIf{
  constructor(s){
    //Initializing base of the conditional
    this.then = statementConstructor(s);
    this.else = actionConstructor(s);
    this.sequence = {
        "then": "Parallel",
        "else": "Serial"
    };

    //Determining which condition type is meritted
    if(s.o === "and" || s.o === "or"){ //TODO not
      this.type = "and,or,not";
      this.and = new IfAndOrNot(s);
    }else if (){
      this.type = "equals,greaterThan,greaterThanOrEquals,lessThan,lessThanOrEquals"
      this. = new IfCompare();
    }else if (){
      this.type = "between"
      this. = new IfBetween();
    }
    else if (){
      this.type = "changes"
      this. = new IfChanges();
    }
    else if (){
      this.type = "remains"
      this. = new IfRemains();
    }
    else if (){
      this.type = "was"
      this. = new IfWas();
    }

    [conditionalType]:conditionalConstructor(piston.s[0]),
    type:conditionalType,
    then:statementConstructor(piston.s[0]),
    sequence:{
        "then": "Parallel",
        "else": "Serial"
    }
  }
};

class IfCompare{
  constructor(){
    this.left = "object";
    this.right = "object";
    this.aggregation = "Any/All";
  };
};

class IfAndOrNot{
  constructor(s){
    let ifActionsArray = ["and", "or", "not", "equals", "greaterThan", "greaterThanOrEquals", "lessThan", "lessThanOrEquals", "between", "changes", "remains", "was", "type", "then", "else", "sequence"];
    this.type = "and/or/not";
    this.andornot = "TODO Select correct IfClass";

    if (s.c.length > 1){
      let conditional = [];
      let condItem = {};
      for (const con of s.c){
        let cLeft = itemConstructor(con, "lo");
        let cRight = itemConstructor(con, "ro");
        condItem = {
          equals:{
            left:cLeft,
            right:cRight,
            aggregation:"Any"
          },
          type:"equals"
        };
        conditional.push(condItem);
      }
    }else{
      let conditional = {
        left:itemConstructor(s.c, "lo"),
        right:itemConstructor(s.c, "ro"),
        aggregation:"Any"
      }
    };

  };
};

class IfBetween {
  constructor(){
    this.value = {
        "time": {
            "reference": "Now"
        },
        "type": "time"
    },
    this.start = {time:new Time(), type:"time"},
    this.end = {time:new Time(), type:"time"},
    this.aggregation = "Any"
  }
};

class IfChanges{
  constructor(){
    this.id;
    this.operand;
    this.andornotbetweencomparisons;
  };
};

class IfRemains{
  constructor(){
    this.id;
    this.operand;
    this.andornotbetweencomparisons;
    this.duration;
  };
};

class IfWas{
  constructor(){
    this.id;
    this.andornotbetweencomparisons;
    this.duration;
  };
};

class ActionSleep{
  constructor(){
    this.duration = 0;
    this.strategy = "Ignore/Interrupt";
  };
};

class ActionCommand{
  constructor(sta){
    {
    this.command = {
      devices:[
        "6caf1de7-9305-43b7-96f9-afefa6e702fc"
      ], //need the device hasher
      commands:[
        {
          component:"main",
          capability:"switch", //needs improvement
          command:sta.s[0].k[0].c
        },
      ],
      sequence:{
          "commands": "Serial",
          "devices": "Serial"
      }
    };
    this.type = "command";

  };
};

class ActionEvery{
  constructor(){
    this.interval;
    this.sequence;
    this.actions;
    this.specific;

  };
};

class ActionLocation{
  constructor(){
    this.locationId;
    this.mode;
    this.security;
  };
};

class ActionScene{
  constructor(){
    this.scenes;
    this.sequence;
  };
};

class ActionNotification{
  constructor(){
    this.push;
    this.audio;
    this.custom;
    this.sms;
    this.image;
    this.type;
  };
};

class ActionToggle{
  constructor(){
    this.devices;
    this.capability;
    this.attribute;
    this.component;
  };
};

class ActionGroup{
  constructor(){
    this.actions;
    this.sequence;
  };
};

class Device {
  constructor(conditions){
    this.devices = ["f522cb3f-e131-401d-a391-7cf32638ef6e"]; //devices are hashed, md5, can't be undone
    this.component = "main"; //smart fridges and power outlets
    this.capability = "contactSensor"; //switch or contactSensor or temperatureMeasurement
    this.attribute = conditions.lo.a;
    this.trigger = "Always";
  }
};

class Date {

  constructor(odw){
    let dayMap = {
      1:"Mon",
      2:"Tue",
      3:"Wed",
      4:"Thu",
      5:"Fri",
      6:"Sat",
      7:"Sun"
    };
    this.timeZoneId = "America/New_York",
    this.daysOfWeek = odw.map(num => dayMap[num]);
  }
};

class Time {
  constructor(){
    this.timeZoneId="America/New_York",
    this.reference="Noon",
    this.offset={
      "value": {
        "integer": 0,
        "type": "integer"
      },
      "unit": "Minute",
    }
  };
};

class Rule {
  constructor(piston){
    this.name = "Rule 01"; //Not available
    this.actions = new Action(piston.piston);
    this.sequence = {actions:"serial"}; //TODO
    this.timeZoneId = "America/New_York"; //TODO
    this.meta = {
      clientInfo:{
        userOSType: "iOS", //TODO
        userSTAppVersion: "1.6.67-520", //TODO
        userCreationTime: 1624376436, //TODO
        userDeviceId: "25EBCD10-E620-4F30-A035-E976011CFCB7", //TODO
        userUpdateTime: 1624376436 //TODO
      },
      ruleVersion:"1.0", //TODO
      baseLocationID:"0073aaaf-6d45-4c70-ba5b-9af6a17976e1", //TODO
      automationNameUpdatedTime: 0, //TODO
      hidden: false //TODO
    };
    this.status = (piston.active) ? "Enabled":"Disabled";
    this.id = "491829ad-f16a-4f8f-a085-ee5b12f4f5cd"; //TODO
    this.executionLocation = "Cloud"; //TODO
    this.ownerType = "Location"
    this.ownerId = "0073aaaf-6d45-4c70-ba5b-9af6a17976e1" //TODO
    this.dateCreated = "2021-06-22T15:40:37Z" //TODO
    this.dateUpdated = "2021-06-22T15:40:37Z" //TODO
    this.iconUrl = "https://client.smartthings.com/icons/scenes/morning"
  }
};

class Location {
  constructor(){
    this.attribute;
    this.trigger;
  }
};

class Action{
  constructor(piston){
    // Creates the object stored in the array of the action property
    // Parameters: obj piston
    // Returns: obj action

    //Initializing the basis of the action object
    this.limit;
    let pistonType = piston.s[0].t;

    //Determining which type of action is meritted

    //Type is conditional
    if (pistonType === "if"){
      this.if = new ActionIf(piston.s);
      this.type = "if";
    }
    //Type is action
    else if (pistonType === "action"){
      let pistonKC = piston.s[0].k.c;
      if (pistonKC  === ""){
        this.command = new ActionCommand(); //s.k is array of objects
        this.type = "action";
      }else if (pistonKC === "sendEmail" || pistonKC === "sendEmail"){
        this.notification = new ActionNotification();
        this.type = "notification";
      }else if (pistonKC === "wait" || pistonKC === "waitForDateTime" || pistonKC === "waitForTime" || pistonKC === "waitRandom"){
        this.sleep = new ActionSleep();
        this.type = "sleep";
      }else if (pistonType === ){
        this.every = new ActionEvery();
        this.type = "every";
      }
    }
    else if (pistonType === ){
      this.location = new ActionLocation()
      this.type = "location";
    }else if (pistonType === ){
      this.scene = new ActionScene();
      this.type = "scene";
    }else if (pistonType === ){
      this.toggle = new ActionToggle();
      this.type = "toggle";
    }else if (pistonType === ){
      this.group = new ActionGroup();
      this.type = "group";
    };
  }
};

function conditionalConstructor(sta){
  //Returns the Rules API format of the condition object
  //Parameters: obj sta, the statement from the piston
  //Returns: obj condition or obj[] if multiple
  if (sta.c.length > 1){
    let conditional = [];
    let condItem = {};
    for (const con of sta.c){
      let cLeft = itemConstructor(con, "lo");
      let cRight = itemConstructor(con, "ro");
      condItem = {
        equals:{
          left:cLeft,
          right:cRight,
          aggregation:"Any"
        },
        type:"equals"
      };
      conditional.push(condItem);
    }
  }else{
    let conditional = {
      left:itemConstructor(sta.c, "lo"),
      right:itemConstructor(sta.c, "ro"),
      aggregation:"Any"
    }
  };
  return conditional;
};

function statementConstructor(sta){
  //Returns the Rules API format of the statement object
  //Parameters: obj sta, the statement from the piston
  //Returns: obj statement or obj[] if multiple
  if (sta.c.length > 1){
    // for (const stat of sta.s){
    //   let device = new Device(stat);
    // }
  }else{
    let statement = [
      {
      command:{
        devices:[
          "6caf1de7-9305-43b7-96f9-afefa6e702fc"
        ], //need the device hasher
        commands:[
          {
            component:"main",
            capability:"switch", //needs improvement
            command:sta.s[0].k[0].c
          },
        ],
        sequence:{
            "commands": "Serial",
            "devices": "Serial"
        }
      },
      type:"command"
      }
    ];
  }
};

function itemConstructor(inf, loro){
  //returns the items that represent the right and left hands of the statements and conditional
  //Parameters: obj inf, str loro
  //Returns: obj item
  // let typeMap = { //device, string, date, between, location, notification[sms]
  //   time:(new Date(inf[loro].odw)), // -> Date
  //   string:, // ->
  //   enum: // ->
  //   // ->
  // };
  let type = inf[0][loro].vt
  let item = {
    [type]:(inf[0][loro].exp.i[0].t === "string") ? new Device(con):inf[0][loro].exp.i[0].v,
    type:type
  };
  return item;
};

console.log(new Rule(piston01));
